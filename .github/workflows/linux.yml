name: Linux

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
    branches: [ main ]

jobs:


  build_linux:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libfuse2 libsecret-1-dev libjsoncpp-dev libsecret-1-0 libsecret-tools
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter build linux
      - run: dart pub global activate flutter_distributor
      - run: flutter_distributor package --platform linux --targets deb
      #- run: flutter_distributor package --platform linux --targets appimage

#      - run: wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
#      - run: chmod +x  appimagetool-x86_64.AppImage
#      - run: cp -r build/linux/x64/release/bundle/* Yana.AppDir/
#      - run: cp -r assets/imgs/logo/logo.png Yana.AppDir/
#      - run: ./appimagetool-x86_64.AppImage Yana.AppDir/

#      - name: 'Artifact'
#        uses: actions/upload-artifact@v2
#        with:
#          name: Yana-x86_64.AppImage
#          path: Yana-x86_64.AppImage
#
#  release:
#    needs: build_android
#    runs-on: ubuntu-latest
#
#    steps:

#      # APP BUNDLE
#      - name: Upload APP BUNDLE to release
#        id: upload-release-asset-play-universal-appbundle
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: build/app/outputs/bundle/release/app-release.aab
#          asset_name: yana-${{ github.ref_name }}.aab
#          asset_content_type: application/zip

      # LINUX APPIMAGE
#      - name: Upload APP BUNDLE to release
#        id: upload-release-asset-play-universal-appbundle
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: Yana-x86_64.AppImage
#          asset_name: Yana-x86_64-${{ github.ref_name }}.AppImage
#          asset_content_type: application/zip


#LINUX ->  flutter_distributor package --platform linux --targets appimage